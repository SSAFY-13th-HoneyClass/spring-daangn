<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.example.springboot.repository.PhotoRepositoryTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2025-05-09T11:10:44.522Z" hostname="bagbyeongchan-ui-MacBook-Pro.local" time="0.023">
  <properties/>
  <testcase name="사진 등록 및 조회 테스트" classname="org.example.springboot.repository.PhotoRepositoryTest" time="0.023"/>
  <system-out><![CDATA[2025-05-09T20:10:44.520+09:00  INFO 18646 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.example.springboot.repository.PhotoRepositoryTest]: PhotoRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-09T20:10:44.521+09:00  INFO 18646 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.example.springboot.Application for test class org.example.springboot.repository.PhotoRepositoryTest
2025-05-09T20:10:44.524+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.526+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.527+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.529+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
2025-05-09T20:10:44.531+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
2025-05-09T20:10:44.533+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
2025-05-09T20:10:44.534+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
2025-05-09T20:10:44.535+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        photos
        (created_at, path, post_id) 
    values
        (?, ?, ?)
2025-05-09T20:10:44.536+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.image_id,
        p1_0.created_at,
        p1_0.path,
        p1_0.post_id 
    from
        photos p1_0
Hibernate: 
    select
        p1_0.image_id,
        p1_0.created_at,
        p1_0.path,
        p1_0.post_id 
    from
        photos p1_0
2025-05-09T20:10:44.540+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.image_id,
        p1_0.created_at,
        p1_0.path,
        p1_0.post_id 
    from
        photos p1_0 
    where
        p1_0.post_id=?
Hibernate: 
    select
        p1_0.image_id,
        p1_0.created_at,
        p1_0.path,
        p1_0.post_id 
    from
        photos p1_0 
    where
        p1_0.post_id=?
2025-05-09T20:10:44.541+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.image_id,
        p1_0.created_at,
        p1_0.path,
        p1_0.post_id 
    from
        photos p1_0 
    where
        p1_0.post_id=?
Hibernate: 
    select
        p1_0.image_id,
        p1_0.created_at,
        p1_0.path,
        p1_0.post_id 
    from
        photos p1_0 
    where
        p1_0.post_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
