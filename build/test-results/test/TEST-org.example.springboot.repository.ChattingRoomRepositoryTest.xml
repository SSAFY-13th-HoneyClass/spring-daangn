<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.example.springboot.repository.ChattingRoomRepositoryTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2025-05-09T11:10:44.459Z" hostname="bagbyeongchan-ui-MacBook-Pro.local" time="0.033">
  <properties/>
  <testcase name="채팅방 등록 및 조회 테스트" classname="org.example.springboot.repository.ChattingRoomRepositoryTest" time="0.033"/>
  <system-out><![CDATA[2025-05-09T20:10:44.456+09:00  INFO 18646 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.example.springboot.repository.ChattingRoomRepositoryTest]: ChattingRoomRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-09T20:10:44.457+09:00  INFO 18646 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.example.springboot.Application for test class org.example.springboot.repository.ChattingRoomRepositoryTest
2025-05-09T20:10:44.461+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.463+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.464+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.466+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.467+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.469+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        chattingrooms
        (created_at, post_id, updated_at, user_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        chattingrooms
        (created_at, post_id, updated_at, user_id) 
    values
        (?, ?, ?, ?)
2025-05-09T20:10:44.470+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        chattingrooms
        (created_at, post_id, updated_at, user_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        chattingrooms
        (created_at, post_id, updated_at, user_id) 
    values
        (?, ?, ?, ?)
2025-05-09T20:10:44.471+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        chattingrooms
        (created_at, post_id, updated_at, user_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        chattingrooms
        (created_at, post_id, updated_at, user_id) 
    values
        (?, ?, ?, ?)
2025-05-09T20:10:44.473+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0
Hibernate: 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0
2025-05-09T20:10:44.478+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.user_id=?
Hibernate: 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.user_id=?
2025-05-09T20:10:44.480+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.user_id=?
Hibernate: 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.user_id=?
2025-05-09T20:10:44.482+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.post_id=?
Hibernate: 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.post_id=?
2025-05-09T20:10:44.483+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.post_id=?
Hibernate: 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.post_id=?
2025-05-09T20:10:44.485+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.user_id=? 
        and cr1_0.post_id=?
Hibernate: 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.user_id=? 
        and cr1_0.post_id=?
2025-05-09T20:10:44.489+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.post_id in (select
            p1_0.post_id 
        from
            posts p1_0 
        where
            p1_0.user_id=?)
Hibernate: 
    select
        cr1_0.chattingroom_id,
        cr1_0.created_at,
        cr1_0.post_id,
        cr1_0.updated_at,
        cr1_0.user_id 
    from
        chattingrooms cr1_0 
    where
        cr1_0.post_id in (select
            p1_0.post_id 
        from
            posts p1_0 
        where
            p1_0.user_id=?)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
