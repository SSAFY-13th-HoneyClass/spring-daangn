<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.example.springboot.repository.PostRepositoryTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2025-05-09T11:10:44.594Z" hostname="bagbyeongchan-ui-MacBook-Pro.local" time="0.028">
  <properties/>
  <testcase name="게시물 등록 및 조회 테스트" classname="org.example.springboot.repository.PostRepositoryTest" time="0.028"/>
  <system-out><![CDATA[2025-05-09T20:10:44.591+09:00  INFO 18646 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.example.springboot.repository.PostRepositoryTest]: PostRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-09T20:10:44.592+09:00  INFO 18646 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.example.springboot.Application for test class org.example.springboot.repository.PostRepositoryTest
2025-05-09T20:10:44.596+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.597+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (created_at, email, name, nickname, password, phone, profile, profile_img_path, role) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.600+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.602+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.603+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        posts
        (content, created_at, status, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-05-09T20:10:44.606+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0
Hibernate: 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0
2025-05-09T20:10:44.609+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    where
        p1_0.user_id=?
2025-05-09T20:10:44.611+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    where
        p1_0.status=?
Hibernate: 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    where
        p1_0.status=?
2025-05-09T20:10:44.615+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    where
        p1_0.status=?
Hibernate: 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    where
        p1_0.status=?
2025-05-09T20:10:44.618+09:00 DEBUG 18646 --- [    Test worker] org.hibernate.SQL                        : 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    order by
        p1_0.created_at desc
Hibernate: 
    select
        p1_0.post_id,
        p1_0.content,
        p1_0.created_at,
        p1_0.status,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id 
    from
        posts p1_0 
    order by
        p1_0.created_at desc
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
